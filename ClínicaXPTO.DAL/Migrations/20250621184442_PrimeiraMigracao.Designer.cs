// <auto-generated />
using System;
using ClinicaXPTO.DAL.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClinicaXPTO.DAL.Migrations
{
    [DbContext(typeof(ClinicaXPTODbContext))]
    [Migration("20250621184442_PrimeiraMigracao")]
    partial class PrimeiraMigracao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClinicaXPTO.Models.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan?>("HorarioSolicitado")
                        .HasColumnType("time");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidoMarcacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfissionalId")
                        .HasColumnType("int");

                    b.Property<int>("SubsistemaSaudeId")
                        .HasColumnType("int");

                    b.Property<int>("TipoActoClinicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoMarcacaoId");

                    b.HasIndex("ProfissionalId");

                    b.HasIndex("SubsistemaSaudeId");

                    b.HasIndex("TipoActoClinicoId");

                    b.ToTable("ItemPedidos");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.PedidoMarcacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FimIntervalo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InicioIntervalo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtenteId");

                    b.ToTable("PedidoMarcacoes");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.Profissional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profissionais");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.SubsistemaSaude", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubsistemasSaude");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.TipoActoClinico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("DuracaoPadrao")
                        .HasColumnType("time");

                    b.Property<decimal?>("Preco")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("TipoActoClinicos");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.Utente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fotografia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroUtente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telemovel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UtilizadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Utentes");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.ItemPedido", b =>
                {
                    b.HasOne("ClinicaXPTO.Models.PedidoMarcacao", "PedidoMarcacao")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoMarcacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicaXPTO.Models.Profissional", "Profissional")
                        .WithMany("ItensPedido")
                        .HasForeignKey("ProfissionalId");

                    b.HasOne("ClinicaXPTO.Models.SubsistemaSaude", "SubsistemaSaude")
                        .WithMany("ItensPedido")
                        .HasForeignKey("SubsistemaSaudeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicaXPTO.Models.TipoActoClinico", "TipoActoClinico")
                        .WithMany("ItensPedido")
                        .HasForeignKey("TipoActoClinicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoMarcacao");

                    b.Navigation("Profissional");

                    b.Navigation("SubsistemaSaude");

                    b.Navigation("TipoActoClinico");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.PedidoMarcacao", b =>
                {
                    b.HasOne("ClinicaXPTO.Models.Utente", "Utente")
                        .WithMany("Pedidos")
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.Utente", b =>
                {
                    b.HasOne("ClinicaXPTO.Models.Utilizador", "Utilizador")
                        .WithMany()
                        .HasForeignKey("UtilizadorId");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.PedidoMarcacao", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.Profissional", b =>
                {
                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.SubsistemaSaude", b =>
                {
                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.TipoActoClinico", b =>
                {
                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("ClinicaXPTO.Models.Utente", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
